- if @user.present?
  - provide(:user, "active")
  - provide(:profile, "active")
  - provide(:title, strip_tags(t('my-profile')))

  .row
    .col-xs-9.col-lg-10
      /! Show user information. Pulled dynamically from the user model instance
      h1 #{@user.display_name}
      p 
        strong = @user.email
      p 
        = pluralize(@user.transcriptions.count, strip_tags(t("transcription")))
        = " "
        = t('in-total').html_safe
      p = @user.bio
      - if @user == current_user || current_user.admin?
        /! if current user is admin or this is their user page, show links to edit the user information
        = link_to t('edit'), edit_user_url(@user)
    .col-xs-3.col-lg-2
      - if @user.avatar.present?
        = image_tag @user.avatar.url(:medium), :class => "img-responsive img-circle"
      - else
        = image_tag "default-person.png", :class => "img-responsive img-circle"

  - if @user == current_user || (current_user && current_user.admin?)
    .row.voffset40
      .col-md-12 
        = link_to t('transcribe-random-page'), new_transcription_path, class: "btn btn-lg btn-draw-accented pull-left"
    .row.voffset20
      .col-md-12
        h2.transcriptions-header
          = t('my-active-transcriptions')
          - if @active_transcriptions.any?
            span.badge
              = @active_transcriptions.size
    .row.voffset20
      .col-md-12
        - if @active_transcriptions.any?
          #active-transcriptions-container
            = render 'transcriptions/transcriptions_table', transcriptions: @active_transcriptions
        - else
          = link_to t('transcribe-random-page'), new_transcription_path, class: "btn btn-lg btn-draw-accented"
    .row.voffset20
      .col-md-12
        h2.transcriptions-header
          = t('my-completed-transcriptions')
          - if @completed_transcriptions_size > 0
            span.badge
              = @completed_transcriptions_size
          button#toggle-completed-transcriptions.btn.btn-default data-target="#completed-transcriptions-container" data-toggle="collapse" title= t('toggle-completed-transcriptions') aria-expanded="false" aria-controls="completed-transcriptions-container"
           i.fa.fa-caret-down
    .row.voffset20
      .col-md-12
        #completed-transcriptions-container.collapse
          - if @completed_transcriptions_size > 0
            <nav class="transcription-paginator" aria-label="...">
              <ul class="pagination">
                - if @num_pages_completed_transcriptions > 1
                  li data-page="first"
                    a href="#p-first"  data-page="first"
                      | &laquo;
                - (0..@num_pages_completed_transcriptions).each_with_index do |p, index|
                  - p = p + 1
                  - if index == 0
                    li.real-page.active data-page= p
                      a href="#p-#{p}" data-page= p
                        = p
                  - else
                    li.real-page data-page= p
                      a href="#p-#{p}" data-page= p
                        = p
                - if @num_pages_completed_transcriptions > 1
                  li data-page="last"
                    a href="#p-last"  data-page="last"
                      | &raquo;
              </ul>
            </nav>
            #transcription-ajax-target
              i.fa.fa-refresh.fa-spin.fa-3x
            <nav class="transcription-paginator" aria-label="...">
              <ul class="pagination">
                - if @num_pages_completed_transcriptions > 1
                  li data-page="first"
                    a href="#p-first"  data-page="first"
                      | &laquo;
                - (0..@num_pages_completed_transcriptions).each_with_index do |p, index|
                  - p = p + 1
                  - if index == 0
                    li.real-page.active data-page= p
                      a href="#p-#{p}" data-page= p
                        = p
                  - else
                    li.real-page data-page= p
                      a href="#p-#{p}" data-page= p
                        = p
                - if @num_pages_completed_transcriptions > 1
                  li data-page="last"
                    a href="#p-last"  data-page="last"
                      | &raquo;
              </ul>
            </nav>
          - else
            p = t('no-pages-completed-yet')
    .row.voffset20
      .col-md-12
        = link_to t('view-list-of-pages-to-transcribe'), public_pages_index_path, class: "btn btn-primary"

    javascript:
      var currentPage = 1;
      var perPage = 20;
      $('#toggle-completed-transcriptions').tooltip();
      $('#completed-transcriptions-container').on('hide.bs.collapse', function () {
        $('#toggle-completed-transcriptions > i').removeClass('fa-caret-up').addClass('fa-caret-down');
      }).on('show.bs.collapse', function () {
        $('#toggle-completed-transcriptions > i').removeClass('fa-caret-down').addClass('fa-caret-up');
        loadTranscriptions();
      });

      $('.transcription-paginator li a').click(function(e) {
        e.preventDefault();
        e.stopPropagation();
        var page = $(e.target).data('page');
        console.log(e.target, page)
        if ($(e.target).hasClass('active')) { return; }

        if (page == 'first') {
          var $current = $('.transcription-paginator li[data-page=' + page + ']');
          $current.siblings().removeClass('active');
          $current.siblings('.real-page').first().addClass('active');
          setCurrentPage(1);
        }
        else if (page == 'last') {
          var $current = $('.transcription-paginator li[data-page=' + page + ']');
          $current.siblings().removeClass('active');
          var $last = $current.siblings('.real-page').last();
          $last.addClass('active');
          setCurrentPage($last.data('page'));
        }
        else {
          setPaginationActiveState(page);
        }
      });

      function setPaginationActiveState(page) {
        var current = $('.transcription-paginator li[data-page=' + page + ']');
        current.siblings().removeClass('active');
        current.addClass('active');
        setCurrentPage(page)
      }

      function setCurrentPage(page) {
        currentPage = page;
        loadTranscriptions();
      }

      function loadTranscriptions() {
        $('#transcription-ajax-target').html('<i class="fa fa-refresh fa-spin fa-3x"></i>');
        $.ajax({
          url: "#{completed_transcriptions_user_path(@user)}",
          data: {
            page: currentPage,
            per_page: perPage
          }
        }).done(function(data) {
          $('#transcription-ajax-target').html(data);
        })
        .fail(function(xhr) {
          $('#transcription-ajax-target').html("Could not load completed transcriptions. Please try again, or report this to the DRAW administrators if the problem persists.");
        });
      }

    scss:
      #toggle-completed-transcriptions {
        margin-left: 10px;
      }

      .transcriptions-header {
        .badge {
          margin-left: 10px;
        }
      }

      #transcription-ajax-target .table-responsive,
      #active-transcriptions-container .table-responsive {
        max-height: 500px;
      }


