nav.navbar.navbar-default.navbar-static-top.draw-top-nav
  .container-fluid
    .navbar-header
      button.navbar-toggle.collapsed aria-controls="navbar" aria-expanded="false" data-target="#navbar" data-toggle="collapse" type="button" 
        span.sr-only Toggle navigation
        span.icon-bar
        span.icon-bar
        span.icon-bar
      a.navbar-brand href="#{baseUri}"
        = t('draw-acronym')
    #navbar.navbar-collapse.collapse.navbar-responsive-collapse
      ul.nav.navbar-nav
        li class="#{yield(:home)}" = link_to t('home'), baseUri
        - if StaticPage.header_links.any?
          - StaticPage.header_links.each do |sp|
            = render "static_pages/link", page: sp
          
        li class="#{yield(:transcribe)} dropdown"
          a.dropdown-toggle aria-expanded="false" aria-haspopup="true" data-toggle="dropdown" href="#" role="button"
            | Transcribe&nbsp;
            span.caret
          ul.dropdown-menu
            - if current_user
              li class="#{yield(:profile)}" = link_to t('my-transcriptions'), my_profile_path
            li class="#{yield(:weather_logs)}" = link_to t('all-pages'), public_pages_index_path
            li class="#{yield(:new_transcription)}" = link_to t('transcribe-random-page'), baseUri + "/transcribe"
        - if user_signed_in?
          
        // li class="#{yield(:contact)}" = link_to "Contact us", "/contact"

      ul.nav.navbar-nav.navbar-right
        li#test-msg
          a
            span.label.label-danger
              = "Testing"
        - if user_signed_in?
          - if current_user.admin?
            li id="admin-menu" class="#{yield(:admin)} dropdown"
              a.dropdown-toggle aria-expanded="false" aria-haspopup="true" data-toggle="dropdown" href="#" role="button"
                = t('admin') + ' '
                span.caret
              ul.dropdown-menu 
                / li = link_to "Mailbox", "#"
                / li class="#{yield(:ledgers)}" = link_to t('ledgers'), ledgers_path
                / li class="#{yield(:annotations)}" = link_to t('annotations'), annotations_path
                li class="#{yield(:pages)}" = link_to t('pages'), admin_pages_path
                li class="#{yield(:transcriptions)}" = link_to t('transcriptions'), admin_transcriptions_path
                li role="separator" class="divider"
                li class="#{yield(:page_types)}" = link_to t('page-types'), admin_page_types_path
                li class="#{yield(:field_groups)}" = link_to t('field-groups'), admin_field_groups_path
                li class="#{yield(:fields)}" = link_to t('fields'), admin_fields_path
                li class="#{yield(:field_options)}" = link_to t('field-options'), admin_field_options_path
                li role="separator" class="divider"
                li class="#{yield(:static_pages)}" = link_to t('content-pages'), admin_static_pages_path
                li class="#{yield(:content_images)}" = link_to t('content-images'), admin_content_images_path
                li role="separator" class="divider"
                li class="#{yield(:users)}" = link_to t('users'), admin_users_path
                li target="translator" = link_to t('edit-site-translations'), '/translator'
          li id="user-menu" class="#{yield(:user)} dropdown"
            = link_to (current_user.display_name + '&nbsp;<i class="caret"></i>').html_safe, my_profile_path, class: "dropdown-toggle", data: {toggle: "dropdown", trigger: "hover"}, aria_expanded:"false", aria_haspopup:"true"
            ul.dropdown-menu
              li class="#{yield(:profile)}"= link_to t('my-profile'), my_profile_path
              li = link_to t('log-out'), "/logout"
        - else
          li = link_to t('log-in'), baseUri + "/login", :class => "sidebar-url"
          li = link_to t('sign-up'), baseUri + "/users/sign_up", :class => "sidebar-url"
        li.dropdown
          a.dropdown-toggle href="#" data-toggle="dropdown"
            = t(I18n.locale) + " "
            i.caret
          ul.dropdown-menu
            - ['en','fr'].each do |lang|
              - if lang != I18n.locale.to_s
                li
                  a href="#{baseUri_with_lang(lang) + request_path}"
                   = t(lang)





